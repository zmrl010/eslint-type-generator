import { dedent } from "dedented";
import fs from "fs";
import path from "path";

const AUTO_GENERATED_NOTE = dedent`
/**
 * THIS FILE IS AUTO-GENERATED.
 * DO NOT MODIFY IT MANUALLY.
 * RUN \`pnpm generate:types\` TO REGENERATE IT.'
 */
`;

/**
 * Context holding references to resolved configuration and functions
 */
export interface GeneratorContext {
  /**
   * Target output directory to write type files
   *
   * @default "types/"
   */
  outDir: string;

  /**
   * Current working directory to start from
   *
   * @default process.cwd()
   */
  cwd: string;

  /**
   * Function to handle writing text to output (usually a file somewhere)
   *
   * @default node:fs.writeFileSync()
   */
  write: (path: string, text: string) => void;

  /**
   * Note prepended to generated files
   */
  autoGeneratedNote: string;
}

export type GeneratorOptions = Partial<GeneratorContext>;

/**
 * Resolve options into a complete context
 */
export function setupContext(options: GeneratorOptions = {}): GeneratorContext {
  const {
    cwd = process.cwd(),
    autoGeneratedNote = AUTO_GENERATED_NOTE,
    write = fs.writeFileSync,
  } = options;

  if (cwd !== process.cwd()) {
    process.chdir(cwd);
  }

  return {
    cwd,
    outDir: path.resolve(options.outDir ?? "types/"),
    write,
    autoGeneratedNote,
  };
}
